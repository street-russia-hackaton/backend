# Generated by Django 5.0.6 on 2024-05-26 18:47

import datetime

import core.constants
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import users.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=core.constants.UserFieldsLength[
                            "MAX_LENGTH_USERNAME"
                        ],
                        unique=True,
                        validators=[
                            users.validators.validate_username,
                            django.contrib.auth.validators.UnicodeUsernameValidator(),
                        ],
                        verbose_name="Логин",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        max_length=core.constants.UserFieldsLength[
                            "MAX_LENGTH_USERNAME"
                        ],
                        verbose_name="Пароль",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        max_length=core.constants.UserFieldsLength[
                            "MAX_LENGTH_USERNAME"
                        ],
                        verbose_name="Имя",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        max_length=core.constants.UserFieldsLength[
                            "MAX_LENGTH_USERNAME"
                        ],
                        verbose_name="Фамилия",
                    ),
                ),
                (
                    "middle_name",
                    models.CharField(
                        max_length=core.constants.UserFieldsLength[
                            "MAX_LENGTH_USERNAME"
                        ],
                        verbose_name="Отчество",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=core.constants.UserFieldsLength[
                            "MAX_LENGTH_USERNAME"
                        ],
                        unique=True,
                        verbose_name="Электронная почта",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=core.constants.UserFieldsLength["MAX_LENGTH_PHONE"],
                        unique=True,
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        default=None,
                        null=True,
                        upload_to="users/images/",
                        verbose_name="Фото",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True,
                        max_length=core.constants.UserFieldsLength[
                            "MAX_LENGTH_USERNAME"
                        ],
                        verbose_name="Должность",
                    ),
                ),
                (
                    "account_status",
                    models.CharField(
                        choices=[
                            ("user", "Пользователь"),
                            ("member", "Участник"),
                            ("curator", "Куратор"),
                            ("regional_leader", "Региональный руководитель"),
                            ("central_leadership", "Центральное руководство"),
                        ],
                        default="user",
                        max_length=core.constants.UserFieldsLength["MAX_LENGTH_STATUS"],
                        verbose_name="Статус аккаунта",
                    ),
                ),
                (
                    "birth_year",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Дата рождения"
                    ),
                ),
                (
                    "career_start",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата начала карьеры"
                    ),
                ),
                ("biography", models.TextField(blank=True, verbose_name="Биография")),
                ("vk_link", models.URLField(blank=True, verbose_name="Ссылка на ВК")),
                (
                    "video_profile",
                    models.FileField(
                        blank=True,
                        upload_to="video_profiles/",
                        verbose_name="Видеовизитка",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserPassport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "passport_series",
                    models.CharField(
                        default="",
                        max_length=core.constants.UserFieldsLength["MAX_LENGTH_SERIES"],
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{1,10}$", message="Only digits are allowed"
                            )
                        ],
                        verbose_name="Серия паспорта",
                    ),
                ),
                (
                    "passport_number",
                    models.CharField(
                        default="",
                        max_length=core.constants.UserFieldsLength["MAX_LENGTH_NUMBER"],
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{1,20}$", message="Only digits are allowed"
                            )
                        ],
                        verbose_name="Номер паспорта",
                    ),
                ),
                (
                    "passport_issued_by",
                    models.CharField(
                        default="",
                        max_length=core.constants.UserFieldsLength[
                            "MAX_LENGTH_USERNAME"
                        ],
                        verbose_name="Кем выдан паспорт",
                    ),
                ),
                (
                    "passport_issued_at",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Дата выдачи"
                    ),
                ),
                (
                    "accept_rules",
                    models.BooleanField(
                        default=False,
                        verbose_name="Cогласие с правами и обязанностями участника",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="passport",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Инфо о паспорте пользователя",
                "verbose_name_plural": "Инфо о паспортах пользователей",
                "ordering": ["-pk"],
            },
        ),
    ]
